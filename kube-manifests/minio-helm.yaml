affinity: {}
apiIngress:
  annotations: {}
  apiVersion: ""
  enabled: false
  extraHosts: []
  extraPaths: []
  extraTls: []
  hostname: minio.local
  ingressClassName: ""
  path: /
  pathType: ImplementationSpecific
  secrets: []
  selfSigned: false
  servicePort: minio-api
  tls: false
args: []
auth:
  existingSecret: ""
  forceNewKeys: false
  forcePassword: false
  rootPassword: ""
  rootUser: admin
  useCredentialsFiles: false
clientImage:
  registry: eu.gcr.io
  repository: silent-relic-333216/minio
  tag: 2021.11.5-debian-10-r3
clusterDomain: cluster.local
command: []
commonAnnotations: {}
commonLabels: {}
containerPorts:
  api: 9000
  console: 9001
containerSecurityContext:
  enabled: true
  runAsNonRoot: true
  runAsUser: 1001
customLivenessProbe: {}
customReadinessProbe: {}
customStartupProbe: {}
defaultBuckets: ""
deployment:
  updateStrategy:
    type: Recreate
disableWebUI: false
extraDeploy: []
extraEnvVars: {}
extraEnvVarsCM: ""
extraEnvVarsSecret: ""
extraVolumeMounts: []
extraVolumes: []
fullnameOverride: ""
gateway:
  auth:
    azure:
      accessKey: ""
      secretKey: ""
      serviceEndpoint: ""
      storageAccountKey: ""
      storageAccountKeyExistingSecret: ""
      storageAccountKeyExistingSecretKey: ""
      storageAccountName: ""
      storageAccountNameExistingSecret: ""
      storageAccountNameExistingSecretKey: ""
    gcs:
      accessKey: ""
      keyJSON: ""
      projectID: ""
      secretKey: ""
    nas:
      accessKey: ""
      secretKey: ""
    s3:
      accessKey: ""
      secretKey: ""
      serviceEndpoint: https://s3.amazonaws.com
  autoscaling:
    enabled: false
    maxReplicas: "4"
    minReplicas: "4"
    targetCPU: ""
    targetMemory: ""
  enabled: false
  priorityClassName: ""
  replicaCount: 4
  type: s3
  updateStrategy:
    type: Recreate
global:
  imagePullSecrets: []
  imageRegistry: ""
  storageClass: ""
hostAliases: []
image:
  debug: false
  pullPolicy: IfNotPresent
  pullSecrets: []
  registry: eu.gcr.io
  repository: silent-relic-333216/minio
  tag: 2021.11.9
ingress:
  annotations: {}
  apiVersion: ""
  enabled: false
  extraHosts: []
  extraPaths: []
  extraTls: []
  hostname: minio.local
  ingressClassName: ""
  path: /
  pathType: ImplementationSpecific
  secrets: []
  selfSigned: false
  servicePort: minio-console
  tls: false
initContainers: []
kubeVersion: ""
lifecycleHooks: {}
livenessProbe:
  enabled: true
  failureThreshold: 5
  initialDelaySeconds: 5
  periodSeconds: 5
  successThreshold: 1
  timeoutSeconds: 5
metrics:
  prometheusAuthType: public
  serviceMonitor:
    enabled: false
    honorLabels: false
    interval: 30s
    jobLabel: ""
    labels: {}
    metricRelabelings: []
    namespace: ""
    path: /minio/v2/metrics/cluster
    relabelings: []
    scrapeTimeout: ""
    selector: {}
mode: standalone
nameOverride: ""
networkPolicy:
  allowExternal: true
  enabled: false
  extraFromClauses: {}
nodeAffinityPreset:
  key: ""
  type: ""
  values: []
nodeSelector: {}
pdb:
  create: false
  maxUnavailable: ""
  minAvailable: 1
persistence:
  accessModes:
  - ReadWriteOnce
  annotations: {}
  enabled: true
  existingClaim: ""
  mountPath: /data
  size: 8Gi
  storageClass: ""
podAffinityPreset: ""
podAnnotations: {}
podAntiAffinityPreset: soft
podLabels: {}
podSecurityContext:
  enabled: true
  fsGroup: 1001
priorityClassName: ""
provisioning:
  args: []
  buckets: []
  command: []
  config: []
  enabled: false
  extraVolumeMounts: []
  extraVolumes: []
  groups: []
  podAnnotations: {}
  resources:
    limits: {}
    requests: {}
  schedulerName: ""
  users: []
readinessProbe:
  enabled: true
  failureThreshold: 5
  initialDelaySeconds: 5
  periodSeconds: 5
  successThreshold: 1
  timeoutSeconds: 1
resources:
  limits: {}
  requests: {}
schedulerName: ""
service:
  annotations: {}
  clusterIP: ""
  externalTrafficPolicy: Cluster
  extraPorts: []
  loadBalancerIP: ""
  loadBalancerSourceRanges: []
  nodePorts:
    api: ""
    console: ""
  ports:
    api: 9000
    console: 9001
  type: ClusterIP
serviceAccount:
  annotations: {}
  automountServiceAccountToken: true
  create: true
  name: ""
sidecars: []
startupProbe:
  enabled: false
  failureThreshold: 60
  initialDelaySeconds: 0
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 5
statefulset:
  drivesPerNode: 1
  podManagementPolicy: Parallel
  replicaCount: 4
  updateStrategy:
    type: RollingUpdate
  zones: 1
tls:
  enabled: false
  existingSecret: ""
  mountPath: ""
tolerations: []
topologySpreadConstraints: []
volumePermissions:
  containerSecurityContext:
    runAsUser: 0
  enabled: false
  image:
    pullPolicy: IfNotPresent
    pullSecrets: []
    registry: docker.io
    repository: bitnami/bitnami-shell
    tag: 10-debian-10-r246
  resources:
    limits: {}
    requests: {}
